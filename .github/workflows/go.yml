name: Go

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        # Docker Hub image
        image: postgres:12.4
        # Provide the user, password and database for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: gob
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          # Opens tcp port 5432 on the host and service container
          - 5432:5432

      mysql:
        # Docker Hub image
        image: mysql:8.0.21
        # Provide the user, password and database for mysql
        env:
          MYSQL_ROOT_PASSWORD: fY5SGU=t
          MYSQL_USER: gob
          MYSQL_PASSWORD: fY5SGU=t
          MYSQL_DATABASE: gob
        # Set health checks to wait until mysql has started
        options: >-
          --health-cmd "mysqladmin ping -u gob --password='fY5SGU=t'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          # Opens tcp port 3306 on the host and service container
          - 3306:3306

      cassandra:
        # Docker Hub image
        image: cassandra:3.11.8
        # Set health checks to wait until mysql has started
        options: >-
          --health-cmd "cqlsh -e 'describe keyspaces'"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

        ports:
          # Opens tcp port 3306 on the host and service container
          - 9042:9042

    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build ./...

    - name: Run Test
      run: go test -v -race -cover ./...
