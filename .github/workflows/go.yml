name: Go

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        # Docker Hub image
        image: postgres:12.4
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          # Opens tcp port 5432 on the host and service container
          - 5432:5432

    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Test
      run: go test -v -race -cover ./...

    # Performs a clean installation of all dependencies in the `package.json` file
    # For more information, see https://docs.npmjs.com/cli/ci.html
    - name: Install dependencies
      run: npm ci

    - name: Connect to PostgreSQL
      # Runs a script that creates a PostgreSQL client, populates
      # the client with data, and retrieves data
      run: node client.js
    
      # Environment variable used by the `client.js` script to create
      # a new PostgreSQL client.
      env:
        # The hostname used to communicate with the PostgreSQL service container
        POSTGRES_HOST: localhost
        # The default PostgreSQL port
        POSTGRES_PORT: 5432
